# Generated by protoc-gen-gdscript. DO NOT EDIT!
extends RefCounted

class_name Character_Item

extends RefCounted

const PROTO_VERSION = 2

var id = ""
var name = ""
var quantity = 1

func _init():
	pass

func serialize() -> PackedByteArray:
	var bytes = PackedByteArray()
	if id != null:
		bytes.append_array(encode_varint(10))
		bytes.append_array(encode_value(id))
	if name != null:
		bytes.append_array(encode_varint(18))
		bytes.append_array(encode_value(name))
	if quantity != null:
		bytes.append_array(encode_varint(24))
		bytes.append_array(encode_value(quantity))
	return bytes

func deserialize(bytes: PackedByteArray) -> void:
	var pos = 0
	while pos < bytes.size():
		var tag = decode_varint(bytes, pos)
		pos += varint_size(tag)
		var field_number = tag >> 3
		var wire_type = tag & 0x07
		match field_number:
		1:
			id = decode_value(bytes, pos)
		2:
			name = decode_value(bytes, pos)
		3:
			quantity = decode_value(bytes, pos)
		_:
			skip_unknown_field(bytes, wire_type, pos)

static func encode_varint(value: int) -> PackedByteArray:
	var bytes = PackedByteArray()
	while value > 0x7F:
		bytes.append((value & 0x7F) | 0x80)
		value >>= 7
	bytes.append(value & 0x7F)
	return bytes

static func decode_varint(bytes: PackedByteArray, pos: int) -> int:
	var result = 0
	var shift = 0
	while true:
		if pos >= bytes.size():
			break
		var b = bytes[pos]
		result |= (b & 0x7F) << shift
		if (b & 0x80) == 0:
			break
		shift += 7
		pos += 1
	return result

static func varint_size(value: int) -> int:
	var size = 0
	while value > 0x7F:
		size += 1
		value >>= 7
	return size + 1

static func skip_unknown_field(bytes: PackedByteArray, wire_type: int, pos: int) -> int:
	match wire_type:
		0: # varint
			while pos < bytes.size() && (bytes[pos] & 0x80) != 0:
				pos += 1
			return pos + 1
		1: # 64-bit
			return pos + 8
		2: # length-delimited
			var length = decode_varint(bytes, pos)
			pos += varint_size(length)
			return pos + length
		5: # 32-bit
			return pos + 4
		_:
			return pos